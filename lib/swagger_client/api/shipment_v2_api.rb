=begin
#Team Worldwide API 2022

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 0.0.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.33
=end

module SwaggerClient
  class ShipmentV2Api
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Gets the shipment status by house bill.
    # Retrieves the collection of GetShipmentStatus resources.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :house_bill 
    # @return [InlineResponse2004]
    def get_get_shipment_status_collection(opts = {})
      data, _status_code, _headers = get_get_shipment_status_collection_with_http_info(opts)
      data
    end

    # Gets the shipment status by house bill.
    # Retrieves the collection of GetShipmentStatus resources.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :house_bill 
    # @return [Array<(InlineResponse2004, Integer, Hash)>] InlineResponse2004 data, response status code and response headers
    def get_get_shipment_status_collection_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.get_get_shipment_status_collection ...'
      end
      # resource path
      local_var_path = '/api/teamww/get-shipment-statuses'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'houseBill'] = opts[:'house_bill'] if !opts[:'house_bill'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'InlineResponse2004' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#get_get_shipment_status_collection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Gets and Reserves a Team WorldWide HouseBill.
    # Retrieves the collection of GetHouseBill resources.
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2003]
    def get_house_bill_get_house_bill_collection(opts = {})
      data, _status_code, _headers = get_house_bill_get_house_bill_collection_with_http_info(opts)
      data
    end

    # Gets and Reserves a Team WorldWide HouseBill.
    # Retrieves the collection of GetHouseBill resources.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2003, Integer, Hash)>] InlineResponse2003 data, response status code and response headers
    def get_house_bill_get_house_bill_collection_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.get_house_bill_get_house_bill_collection ...'
      end
      # resource path
      local_var_path = '/api/teamww/get-house-bill'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'InlineResponse2003' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#get_house_bill_get_house_bill_collection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Book shipments to Team Worldwide.
    # Creates a ShipmentBookingV2 resource.
    # @param body The new ShipmentBookingV2 resource
    # @param [Hash] opts the optional parameters
    # @return [ShipmentBookingV2ShipmentBookingCreatedJsonld]
    def post_create_shipment_booking_shipment_booking_v2_collection(body, opts = {})
      data, _status_code, _headers = post_create_shipment_booking_shipment_booking_v2_collection_with_http_info(body, opts)
      data
    end

    # Book shipments to Team Worldwide.
    # Creates a ShipmentBookingV2 resource.
    # @param body The new ShipmentBookingV2 resource
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShipmentBookingV2ShipmentBookingCreatedJsonld, Integer, Hash)>] ShipmentBookingV2ShipmentBookingCreatedJsonld data, response status code and response headers
    def post_create_shipment_booking_shipment_booking_v2_collection_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.post_create_shipment_booking_shipment_booking_v2_collection ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShipmentV2Api.post_create_shipment_booking_shipment_booking_v2_collection"
      end
      # resource path
      local_var_path = '/api/teamww/create/shipmentBooking'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ShipmentBookingV2ShipmentBookingCreatedJsonld' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#post_create_shipment_booking_shipment_booking_v2_collection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Book shipments to Team Worldwide.
    # Creates a ShipmentBookingV2 resource.
    # @param body The new ShipmentBookingV2 resource
    # @param [Hash] opts the optional parameters
    # @return [ShipmentBookingV2ShipmentBookingCreatedJsonld]
    def post_create_shipment_booking_shipment_booking_v2_collection(body, opts = {})
      data, _status_code, _headers = post_create_shipment_booking_shipment_booking_v2_collection_with_http_info(body, opts)
      data
    end

    # Book shipments to Team Worldwide.
    # Creates a ShipmentBookingV2 resource.
    # @param body The new ShipmentBookingV2 resource
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShipmentBookingV2ShipmentBookingCreatedJsonld, Integer, Hash)>] ShipmentBookingV2ShipmentBookingCreatedJsonld data, response status code and response headers
    def post_create_shipment_booking_shipment_booking_v2_collection_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.post_create_shipment_booking_shipment_booking_v2_collection ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShipmentV2Api.post_create_shipment_booking_shipment_booking_v2_collection"
      end
      # resource path
      local_var_path = '/api/teamww/create/shipmentBooking'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ShipmentBookingV2ShipmentBookingCreatedJsonld' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#post_create_shipment_booking_shipment_booking_v2_collection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Book a single shipment to Team Worldwide.
    # Creates a ShipmentV2 resource.
    # @param body The new ShipmentV2 resource
    # @param [Hash] opts the optional parameters
    # @return [ShipmentV2ShipmentCreatedJsonld]
    def post_create_shipment_shipment_v2_collection(body, opts = {})
      data, _status_code, _headers = post_create_shipment_shipment_v2_collection_with_http_info(body, opts)
      data
    end

    # Book a single shipment to Team Worldwide.
    # Creates a ShipmentV2 resource.
    # @param body The new ShipmentV2 resource
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShipmentV2ShipmentCreatedJsonld, Integer, Hash)>] ShipmentV2ShipmentCreatedJsonld data, response status code and response headers
    def post_create_shipment_shipment_v2_collection_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.post_create_shipment_shipment_v2_collection ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShipmentV2Api.post_create_shipment_shipment_v2_collection"
      end
      # resource path
      local_var_path = '/api/teamww/create/shipment'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ShipmentV2ShipmentCreatedJsonld' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#post_create_shipment_shipment_v2_collection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Book a single shipment to Team Worldwide.
    # Creates a ShipmentV2 resource.
    # @param body The new ShipmentV2 resource
    # @param [Hash] opts the optional parameters
    # @return [ShipmentV2ShipmentCreatedJsonld]
    def post_create_shipment_shipment_v2_collection(body, opts = {})
      data, _status_code, _headers = post_create_shipment_shipment_v2_collection_with_http_info(body, opts)
      data
    end

    # Book a single shipment to Team Worldwide.
    # Creates a ShipmentV2 resource.
    # @param body The new ShipmentV2 resource
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShipmentV2ShipmentCreatedJsonld, Integer, Hash)>] ShipmentV2ShipmentCreatedJsonld data, response status code and response headers
    def post_create_shipment_shipment_v2_collection_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.post_create_shipment_shipment_v2_collection ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShipmentV2Api.post_create_shipment_shipment_v2_collection"
      end
      # resource path
      local_var_path = '/api/teamww/create/shipment'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ShipmentV2ShipmentCreatedJsonld' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#post_create_shipment_shipment_v2_collection\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add Shipment Note.
    # Replaces the ShipmentNoteResource resource.
    # @param body The updated ShipmentNoteResource resource
    # @param house_bill Resource identifier
    # @param [Hash] opts the optional parameters
    # @return [ShipmentNoteResourceJsonld]
    def put_add_new_shipment_note_shipment_note_resource_item(body, house_bill, opts = {})
      data, _status_code, _headers = put_add_new_shipment_note_shipment_note_resource_item_with_http_info(body, house_bill, opts)
      data
    end

    # Add Shipment Note.
    # Replaces the ShipmentNoteResource resource.
    # @param body The updated ShipmentNoteResource resource
    # @param house_bill Resource identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShipmentNoteResourceJsonld, Integer, Hash)>] ShipmentNoteResourceJsonld data, response status code and response headers
    def put_add_new_shipment_note_shipment_note_resource_item_with_http_info(body, house_bill, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.put_add_new_shipment_note_shipment_note_resource_item ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShipmentV2Api.put_add_new_shipment_note_shipment_note_resource_item"
      end
      # verify the required parameter 'house_bill' is set
      if @api_client.config.client_side_validation && house_bill.nil?
        fail ArgumentError, "Missing the required parameter 'house_bill' when calling ShipmentV2Api.put_add_new_shipment_note_shipment_note_resource_item"
      end
      # resource path
      local_var_path = '/api/teamww/create/new/{houseBill}/note'.sub('{' + 'houseBill' + '}', house_bill.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ShipmentNoteResourceJsonld' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#put_add_new_shipment_note_shipment_note_resource_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Add Shipment Note.
    # Replaces the ShipmentNoteResource resource.
    # @param body The updated ShipmentNoteResource resource
    # @param house_bill Resource identifier
    # @param [Hash] opts the optional parameters
    # @return [ShipmentNoteResourceJsonld]
    def put_add_new_shipment_note_shipment_note_resource_item(body, house_bill, opts = {})
      data, _status_code, _headers = put_add_new_shipment_note_shipment_note_resource_item_with_http_info(body, house_bill, opts)
      data
    end

    # Add Shipment Note.
    # Replaces the ShipmentNoteResource resource.
    # @param body The updated ShipmentNoteResource resource
    # @param house_bill Resource identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShipmentNoteResourceJsonld, Integer, Hash)>] ShipmentNoteResourceJsonld data, response status code and response headers
    def put_add_new_shipment_note_shipment_note_resource_item_with_http_info(body, house_bill, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.put_add_new_shipment_note_shipment_note_resource_item ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShipmentV2Api.put_add_new_shipment_note_shipment_note_resource_item"
      end
      # verify the required parameter 'house_bill' is set
      if @api_client.config.client_side_validation && house_bill.nil?
        fail ArgumentError, "Missing the required parameter 'house_bill' when calling ShipmentV2Api.put_add_new_shipment_note_shipment_note_resource_item"
      end
      # resource path
      local_var_path = '/api/teamww/create/new/{houseBill}/note'.sub('{' + 'houseBill' + '}', house_bill.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/ld+json', 'application/json', 'text/html'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ShipmentNoteResourceJsonld' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#put_add_new_shipment_note_shipment_note_resource_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update Booking.
    # Updates the UpdateTeamBooking resource.
    # @param body The updated UpdateTeamBooking resource
    # @param team_booking_number Resource identifier
    # @param [Hash] opts the optional parameters
    # @return [UpdateTeamBookingJsonldGetShipmentBookingCollectionGetRead]
    def put_update_team_booking_update_team_booking_item(body, team_booking_number, opts = {})
      data, _status_code, _headers = put_update_team_booking_update_team_booking_item_with_http_info(body, team_booking_number, opts)
      data
    end

    # Update Booking.
    # Updates the UpdateTeamBooking resource.
    # @param body The updated UpdateTeamBooking resource
    # @param team_booking_number Resource identifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(UpdateTeamBookingJsonldGetShipmentBookingCollectionGetRead, Integer, Hash)>] UpdateTeamBookingJsonldGetShipmentBookingCollectionGetRead data, response status code and response headers
    def put_update_team_booking_update_team_booking_item_with_http_info(body, team_booking_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShipmentV2Api.put_update_team_booking_update_team_booking_item ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShipmentV2Api.put_update_team_booking_update_team_booking_item"
      end
      # verify the required parameter 'team_booking_number' is set
      if @api_client.config.client_side_validation && team_booking_number.nil?
        fail ArgumentError, "Missing the required parameter 'team_booking_number' when calling ShipmentV2Api.put_update_team_booking_update_team_booking_item"
      end
      # resource path
      local_var_path = '/api/teamww/update/updateShipmentBooking/{teamBookingNumber}'.sub('{' + 'teamBookingNumber' + '}', team_booking_number.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/ld+json', 'application/json', 'text/html'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/merge-patch+json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'UpdateTeamBookingJsonldGetShipmentBookingCollectionGetRead' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShipmentV2Api#put_update_team_booking_update_team_booking_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
