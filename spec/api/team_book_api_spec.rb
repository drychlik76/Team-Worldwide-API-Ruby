=begin
#Team Worldwide API 2022

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 0.0.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.33
=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TeamBookApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TeamBookApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TeamBookApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TeamBookApi' do
    it 'should create an instance of TeamBookApi' do
      expect(@instance).to be_instance_of(SwaggerClient::TeamBookApi)
    end
  end

  # unit tests for get_get_accessorials_collection
  # Get TeamBook accessorials.
  # Retrieves the collection of GetAccessorials resources.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'get_get_accessorials_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_get_quote_item
  # Get a Quote along with a reserved house bill.  Use a rateId from get-rates endpoint.
  # Retrieves a GetQuote resource.
  # @param rate_id Resource identifier
  # @param [Hash] opts the optional parameters
  # @return [GetQuoteQuoteResponseJsonld]
  describe 'get_get_quote_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_get_rate_collection
  # Get rates from the Team Book System.
  # Retrieves the collection of GetRate resources.
  # @param origin_city 
  # @param origin_state 
  # @param origin_zip_code 
  # @param origin_country 
  # @param destination_city 
  # @param destination_state 
  # @param destination_zip_code 
  # @param destination_country 
  # @param unit_of_measure Unit of Measure. Valid values: US (lbs/in) - METRIC (kgs/cm) - MIXED (kgs/cms)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :pickup_date Pickup Date. Format: YYYY-MM-DD
  # @option opts [BOOLEAN] :insurance_add_on Option to add 10% to the insurance value
  # @option opts [BOOLEAN] :insure_freight Used to tell the API to quote insurance. Your account must be setup for quoting insurance.
  # @option opts [BigDecimal] :insurance_amount This parameter refers to the extra value of &#x27;Money&#x27; type accessorials like declared value.
  # @option opts [BigDecimal] :linear_feet Linear feet value. Helpful for some volume vendors to return a rate based on space needed in a truck.
  # @option opts [String] :equipment Used for volume vendors and rates they return. Valid values: All, Van, Flatbed
  # @return [InlineResponse2001]
  describe 'get_get_rate_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_get_shipment_status_collection
  # Gets the shipment status by house bill.
  # Retrieves the collection of GetShipmentStatus resources.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :house_bill 
  # @return [InlineResponse2004]
  describe 'get_get_shipment_status_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_book_shipment_collection
  # Book and dispatch a shipment in the TeamBook system.
  # Creates a BookShipment resource.
  # @param body The new BookShipment resource
  # @param [Hash] opts the optional parameters
  # @return [BookShipmentTeamBookResponseJsonld]
  describe 'post_book_shipment_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_book_shipment_collection
  # Book and dispatch a shipment in the TeamBook system.
  # Creates a BookShipment resource.
  # @param body The new BookShipment resource
  # @param [Hash] opts the optional parameters
  # @return [BookShipmentTeamBookResponseJsonld]
  describe 'post_book_shipment_collection test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
